[package]
name = "noir_halo2_backend_pse"
version.workspace = true
edition.workspace = true
license.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
crate-type = ["cdylib", "rlib"]

resolver = "2"

[features]
default = ["pse_snark_verifier"]
cosmwasm = []

[dependencies]
acvm.workspace = true
noir_halo2_backend_common.workspace = true
rand.workspace = true
serde.workspace = true
serde_json.workspace = true

# pse
pse_ecc = { git = "https://github.com/privacy-scaling-explorations/halo2wrong", package = "ecc", tag = "v2023_04_20", features = [
    "circuit-params",
] }
pse_halo2wrong = { git = "https://github.com/privacy-scaling-explorations/halo2wrong", package = "halo2wrong", tag = "v2023_04_20", features = [
    "circuit-params",
] }
pse_maingate = { git = "https://github.com/privacy-scaling-explorations/halo2wrong", package = "maingate", tag = "v2023_04_20", features = [
    "circuit-params",
] }
pse_snark_verifier = { git = "https://github.com/privacy-scaling-explorations/snark-verifier", package = "snark-verifier", tag = "v2023_04_20", features = [
    "halo2_circuit_params",
], optional = true}
# pse_halo2_proofs = { git = "https://github.com/privacy-scaling-explorations/halo2.git", package = "halo2_proofs", tag = "v2023_04_20" }
# pse_ecdsa = { git = "https://github.com/privacy-scaling-explorations/halo2wrong", package = "ecdsa", tag = "v2023_04_20", features = [
#     "circuit-params",
# ] }
# pse_zkevm_circuit = { git = "https://github.com/privacy-scaling-explorations/zkevm-circuits", package = "zkevm-circuits", tag = "v0.3.1" }

[dev-dependencies]
criterion = "0.5.1"

[[bench]]
name = "bench_compilation"
harness = false

[[bench]]
name = "bench_noir_halo2_pse_prove"
harness = false

[[bench]]
name = "bench_noir_halo2_pse_verify"
harness = false

# can only build on linux because the use of a c lib
[target.'cfg(target_family = "wasm")'.dependencies]
console_error_panic_hook.workspace = true
getrandom.workspace = true
serde-wasm-bindgen.workspace = true
tokio.workspace = true
wasm-bindgen.workspace = true
